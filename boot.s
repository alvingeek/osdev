.code16
.section .text
.global _start

SCREEN_PIXEL = 25*80

_start:

# VGA model 3
#+-------------------------------------------------------------+-------------------------------+
#|                          Attribute                          |           Character           |
#+-------------------------------------------------------------+-------------------------------+
#|     7     |   6  |  5  |  4  |     3     |   2  |  1  |  0  | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
#+-----------+------+-----+-----+-----------+------+-----+-----+---+---+---+---+---+---+---+---+
#|   Blink   | Background color | intensity | Foreground color |           Code point          |
#+-----------+------------------+-----------+------------------+-------------------------------+
clear_screen:
    mov $0xb800, %ax
    mov %ax, %es
    xor %di, %di
    mov $0b00010000, %ah
    mov $0, %al
    mov $SCREEN_PIXEL, %cx
    cld #df=0
    rep stosw

    mov $0xb800, %ax
    mov %ax,%ds
#########################直接寻址###########################
#指令是在指令的操作码后面中直接给出操作数的16位偏移地址,
#偏移地址也称为有效地址(EA, Effective Address),
#该地址与指令的操作码一起存放在内存的代码段,
#按低8位-高8位的顺序存放,
#取指令时与指令操作码一起被送入CPU.
#直接寻址指令中，默认使用DS寄存器作为操作数的段基址寄存器.
#当然也可以显式地指定使用其他段寄存器——称为段超越前缀.
############################################################
    movb $'A', 0
    movb $0x1e, 1

idle:
    jmp idle
msg:
    .string "Loading a simple OS!!!^,^"
